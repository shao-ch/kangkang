<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
    <property name="LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH\:mm\:ss}] [%p] [%c] %m%n" />
    <springProperty scope="context" name="logstash-service-id" source="spring.application.name"/>
    <!-- 日志输出路径 -->
    <!-- 当前项目下的 logs文件夹 -->
<!--    <property name="FILE_PATH" value="${user.dir}/logs/kangkang-order-service_%d{yyyy-MM-dd}.%i.log" />-->
    <property name="FILE_PATH" value="${TPOL_HOME}/fileProcess/logs/kangkang-order-service_%d{yyyy-MM-dd}.%i.log" />
<!--    <property name="FILE_PATH" value="/Users/shaochunhai/Desktop/xCodeProject/logs/kangkang-order-service_%d{yyyy-MM-dd}.%i.log" />-->

    <!-- 控制台输出日志 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- 按照上面配置的LOG_PATTERN来打印日志 -->
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!--每天生成一个日志文件，保存30天的日志文件。rollingFile是用来切分文件的 -->
    <appender name="rollingFile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${FILE_PATH}
            </fileNamePattern>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 日志文件的最大大小 -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>



    <!--日志实时上传至elk做分析，这里是通过tcp做上传-->
    <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <param name="Encoding" value="UTF-8"/>
        <destination>101.43.21.125:9600</destination>
        <!--设置编码方式，以及上传的字段及数据格式，也就是在es中有哪些字段-->
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder">
            <!--这里作为logstash设置在es中的索引，通过服务名称去设置索引-->
            <customFields>{"serviceId":"kangkang-log"}</customFields>
            <!--如果想要不讲日志嵌入系统，就自定义字段，然后通过aop的方式去做日志的收集-->
            <!--            <includeMdcKeyName>startTime</includeMdcKeyName>-->
            <!--            <includeMdcKeyName>endTime</includeMdcKeyName>-->
            <!--            <includeMdcKeyName>requestRawJson</includeMdcKeyName>-->
            <!--            <includeMdcKeyName>responseRawJson</includeMdcKeyName>-->
            <!--            <includeMdcKeyName>responseTime</includeMdcKeyName>-->
            <!--            <includeMdcKeyName>url</includeMdcKeyName>-->
            <!--            <includeMdcKeyName>method</includeMdcKeyName>-->
            <!--            <includeMdcKeyName>path</includeMdcKeyName>-->
        </encoder>
        <connectionStrategy>
<!--            logstash输出日志如果有多个logstash IP或端口可以轮询负载各端口-->
            <roundRobin>
                <connectionTTL>5 minutes</connectionTTL>
            </roundRobin>
        </connectionStrategy>
    </appender>
    <!--配置异步日志输出-->
    <appender name="LOGSTASH-ASYN" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="LOGSTASH"/>
    </appender>


    <!-- 日志输出级别 -->
    <!-- 级别大于 info 的都会记录-->
    <root level="INFO"  >
        <appender-ref ref="console" />
        <appender-ref ref="rollingFile" />
        <!--日志输出到logstash-->
<!--        <appender-ref ref="LOGSTASH-ASYN"/>-->
    </root>
</configuration>